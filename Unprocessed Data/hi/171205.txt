मुक्त-स्त्रोत सॉफ्टवेयर
ओपन-सोर्स सॉफ्टवेयर या मुक्त-स्त्रोत सॉफ्टवेयर एक प्रकार का कंप्यूटर सॉफ़्टवेयर है जिसका स्रोत कोड लाइसेंस के तहत जारी किया जाता है जिसमें कॉपीराइट धारक उपयोगकर्ताओं को किसी भी उद्देश्य के लिए और किसी भी उद्देश्य के लिए सॉफ़्टवेयर का अध्ययन, परिवर्तन और वितरण करने का अधिकार प्रदान करता है। ओपन-सोर्स सॉफ्टवेयर को एक सहयोगी सार्वजनिक तरीके से विकसित किया जा सकता है। वैज्ञानिकों के अनुसार, जिन्होंने इसका अध्ययन किया, ओपन सोर्स सॉफ्टवेयर खुले सहयोग का एक प्रमुख उदाहरण है। यह शब्द अक्सर "ओपन सोर्स सॉफ़्टवेयर" के रूप में एक हाइफ़न के बिना लिखा जाता है।
ओपन-सोर्स सॉफ्टवेयर डेवलपमेंट, या कई स्वतंत्र योगदानकर्ताओं के बीच सहयोगी विकास, किसी भी कंपनी लंबे समय तक विकास और बनाए रखने में सक्षम है, इसकी तुलना में डिजाइन परिप्रेक्ष्य का एक और अधिक विविध दायरा उत्पन्न करता है। स्टैंडिश ग्रुप द्वारा 2008 की एक रिपोर्ट में कहा गया है कि गोद लेने ओपन-सोर्स सॉफ्टवेयर मॉडल के परिणामस्वरूप उपभोक्ताओं को प्रति वर्ष करीब 60 अरब डॉलर की बचत हुई है।
इतिहास
1990 के अंत: ओपन सोर्स इनिशिएटिव की फाउंडेशन
कंप्यूटिंग के शुरुआती दिनों में, प्रोग्रामर और डेवलपर्स ने एक-दूसरे से सीखने और कंप्यूटिंग के क्षेत्र को विकसित करने के लिए सॉफ्टवेयर साझा किया। आखिरकार ओपन सोर्स धारणा 1970-1980 में सॉफ्टवेयर के व्यावसायीकरण के रास्ते में चली गई। हालांकि, शिक्षाविदों ने अक्सर सहयोगी रूप से सॉफ्टवेयर विकसित किया, उदाहरण के लिए 1979 में टीएक्स टाइपसेटिंग सिस्टम या रिचर्ड स्टलमैन के साथ जीएनयू ऑपरेटिंग सिस्टम के साथ डोनाल्ड न्यूथ। 1997 में, एरिक रेमंड ने द कैथेड्रल एंड द बाज़ार प्रकाशित किया, हैकर समुदाय और मुफ्त सॉफ्टवेयर सिद्धांतों का एक प्रतिबिंबित विश्लेषण। पेपर को 1998 की शुरुआत में महत्वपूर्ण ध्यान दिया गया था, और नेटस्केप कम्युनिकेशंस कॉरपोरेशन को अपने लोकप्रिय नेटस्केप कम्युनिकेटर इंटरनेट सूट को मुफ्त सॉफ्टवेयर के रूप में रिलीज करने के लिए प्रेरित करने में एक कारक था। बाद में यह स्रोत कोड सागरमोकी, मोज़िला फ़ायरफ़ॉक्स, थंडरबर्ड और कॉम्पोजर के पीछे आधार बन गया।
नेटस्केप के कार्य ने रेमंड और अन्य को यह संकेत दिया कि फ्री सॉफ्टवेयर फाउंडेशन के मुफ्त सॉफ्टवेयर विचारों को कैसे लाया जाए और वाणिज्यिक सॉफ्टवेयर उद्योग को लाभ मिले। उन्होंने निष्कर्ष निकाला कि एफएसएफ का सामाजिक सक्रियता नेटस्केप जैसी कंपनियों से अपील नहीं कर रहा था, और सॉफ़्टवेयर स्रोत कोड पर साझा करने और सहयोग करने की व्यावसायिक क्षमता पर जोर देने के लिए मुक्त सॉफ्टवेयर आंदोलन को पुन: ब्रांड करने का एक तरीका तलाश रहा था। उन्होंने जो नया शब्द चुना वह "ओपन सोर्स" था, जिसे जल्द ही ब्रूस पेरेन्स, प्रकाशक टिम ओ'रेली, लिनस टोरवाल्ड्स और अन्य ने अपनाया था। ओपन सोर्स इनिशिएटिव की स्थापना फरवरी 1998 में नई अवधि के उपयोग को प्रोत्साहित करने और ओपन-सोर्स सिद्धांतों को प्रचारित करने के लिए की गई थी। 
जबकि ओपन सोर्स इनिशिएटिव ने नए कार्यकाल के उपयोग को प्रोत्साहित करने और उनके द्वारा पालन किए जाने वाले सिद्धांतों को प्रचारित करने की मांग की, वाणिज्यिक सॉफ्टवेयर विक्रेताओं ने स्वतंत्र रूप से वितरित सॉफ्टवेयर की अवधारणा और एप्लिकेशन के स्रोत कोड के सार्वभौमिक पहुंच की अवधारणा को तेजी से धमकी दी। एक माइक्रोसॉफ्ट के कार्यकारी ने सार्वजनिक रूप से 2001 में कहा था कि "ओपन सोर्स एक बौद्धिक संपदा विध्वंसक है। मैं ऐसा कुछ कल्पना नहीं कर सकता जो सॉफ़्टवेयर व्यवसाय और बौद्धिक संपदा व्यवसाय के लिए इससे भी बदतर हो।" हालांकि, नि: शुल्क और खुला -सोर्स सॉफ्टवेयर ने ऐतिहासिक रूप से निजी सॉफ्टवेयर विकास के मुख्यधारा के बाहर एक भूमिका निभाई है, माइक्रोसॉफ्ट के रूप में बड़ी कंपनियों ने इंटरनेट पर आधिकारिक ओपन-सोर्स प्रोजेक्ट विकसित करना शुरू कर दिया है। आईबीएम, ओरेकल, Google और स्टेट फार्म आज के कुछ प्रतिस्पर्धी ओपन-सोर्स मार्केट में गंभीर सार्वजनिक हिस्सेदारी वाली कंपनियों में से कुछ हैं। एफओएसएस के विकास से संबंधित कॉर्पोरेट दर्शन में एक महत्वपूर्ण बदलाव आया है।
मुफ्त सॉफ्टवेयर आंदोलन 1983 में लॉन्च किया गया था। 1998 में, व्यक्तियों के एक समूह ने वकालत की थी कि मुक्त सॉफ्टवेयर शब्द को ओपन-सोर्स सॉफ्टवेयर द्वारा एक अभिव्यक्ति के रूप में प्रतिस्थापित किया जाना चाहिए जो कम अस्पष्ट है और कॉर्पोरेट दुनिया के लिए अधिक आरामदायक। सॉफ़्टवेयर डेवलपर्स अपने सॉफ़्टवेयर को ओपन-सोर्स लाइसेंस के साथ प्रकाशित करना चाहते हैं, ताकि कोई भी एक ही सॉफ्टवेयर विकसित कर सके या इसके आंतरिक कार्य को समझ सके। ओपन-सोर्स सॉफ़्टवेयर के साथ, आम तौर पर किसी को इसे संशोधित करने की अनुमति है, इसे नए ऑपरेटिंग सिस्टम और निर्देश सेट आर्किटेक्चर पर पोर्ट करें, इसे दूसरों के साथ साझा करें या कुछ मामलों में, इसे बाजार दें। विद्वानों कैसन और रयान ने खुले स्रोत को अपनाने के लिए कई नीति-आधारित कारणों की ओर इशारा किया है - विशेष रूप से, निम्नलिखित श्रेणियों में ओपन सोर्स से बढ़ी हुई मूल्य प्रस्ताव:
ओपन सोर्स डेफिनिशन, विशेष रूप से, एक ओपन-सोर्स दर्शन प्रस्तुत करता है, और आगे ओपन-सोर्स सॉफ्टवेयर के उपयोग, संशोधन और पुनर्वितरण की शर्तों को परिभाषित करता है। सॉफ़्टवेयर लाइसेंस उन उपयोगकर्ताओं को अधिकार प्रदान करते हैं जो अन्यथा कॉपीराइट धारक द्वारा कॉपीराइट धारक द्वारा आरक्षित किए जाएंगे। कई ओपन सोर्स सॉफ्टवेयर लाइसेंस ओपन सोर्स डेफिनिशन की सीमाओं के भीतर योग्यता प्राप्त कर चुके हैं। सबसे प्रमुख और लोकप्रिय उदाहरण जीएनयू जनरल पब्लिक लाइसेंस है, जो "इस शर्त के तहत मुफ्त वितरण की अनुमति देता है कि आगे के विकास और अनुप्रयोगों को उसी लाइसेंस के तहत रखा जाता है", इस प्रकार भी निःशुल्क।
नेटस्केप की जनवरी 1998 की नेविगेटर के स्रोत कोड रिलीज की घोषणा में प्रतिक्रिया के जवाब में 7 अप्रैल, 1998 को पालो अल्टो में आयोजित एक रणनीति सत्र से ओपन सोर्स लेबल आया। सत्र में व्यक्तियों के एक समूह में टिम ओ 'रेली, लिनस टोरवाल्ड्स, टॉम पाक्विन, जेमी ज़विंस्की, लैरी वॉल, ब्रायन बेहेलेन्दोर्फ़, समीर पारेख, एरिक ऑलमैन, ग्रेग ओल्सन, पॉल विक्सि, जॉन ओस्टरहौउट, गिडो वैन रॉसम, फिलिप ज़िमर्मन, जॉन गिलमोर और एरिक एस रेमंड। उन्होंने अंग्रेजी में "फ्री" शब्द की अस्पष्टता के कारण संभावित भ्रम को स्पष्ट करने के लिए नेविगेटर के स्रोत कोड के रिलीज से पहले अवसर का उपयोग किया।
कई लोगों ने दावा किया कि 1969 से इंटरनेट के जन्म ने ओपन सोर्स मूवमेंट शुरू किया, जबकि अन्य ओपन-सोर्स और फ्री सॉफ्टवेयर मूवमेंट्स के बीच अंतर नहीं करते हैं।
फ्री सॉफ्टवेयर फाउंडेशन, 1985 में शुरू हुआ, जिसका उद्देश्य "मुक्त" शब्द को वितरित करने की स्वतंत्रता का इरादा था और लागत से स्वतंत्रता नहीं थी । चूंकि मुफ्त सॉफ्टवेयर का एक बड़ा सौदा पहले से ही था मुफ्त में, इस तरह का मुफ्त सॉफ्टवेयर शून्य लागत से जुड़ा हुआ था, जो एंटी-वाणिज्यिक लग रहा था।
ओपन सोर्स इनिशिएटिव का गठन फरवरी 1998 में एरिक रेमंड और ब्रूस पेरेन द्वारा किया गया था। इंटरनेट डेवलपर समुदाय द्वारा पहले से ही खुले विकास के विपरीत बंद सॉफ्टवेयर विकास के मामले के इतिहास से कम से कम 20 साल के साक्ष्य के साथ, ओएसआई ने नेटस्केप जैसे व्यावसायिक व्यवसायों को "ओपन सोर्स" केस प्रस्तुत किया। ओएसआई ने आशा व्यक्त की कि रणनीति सत्र में दूरदर्शिता संस्थान के क्रिस्टीन पीटरसन द्वारा सुझाए गए एक शब्द "ओपन सोर्स" लेबल का उपयोग अस्पष्टता को खत्म कर देगा, खासकर उन व्यक्तियों के लिए जो "मुक्त सॉफ्टवेयर" को एंटी-कमर्शियल मानते हैं। उन्होंने स्वतंत्र रूप से उपलब्ध स्रोत कोड के व्यावहारिक लाभों के लिए एक उच्च प्रोफ़ाइल लाने की मांग की, और वे बड़े सॉफ्टवेयर व्यवसाय और अन्य उच्च तकनीक उद्योगों को खुले स्रोत में लाने के लिए चाहते थे। पेरेन ने ओएसआई के लिए सेवा चिह्न के रूप में "ओपन सोर्स" को पंजीकृत करने का प्रयास किया, लेकिन यह प्रयास ट्रेडमार्क मानकों द्वारा अव्यवहारिक था। इस बीच, नेटस्केप-रेमंड में ऊपरी प्रबंधन में रेमंड के पेपर की प्रस्तुति के कारण केवल प्रेस विज्ञप्ति को पढ़ने पर पता चला, और नेटस्केप के सीईओ जिम बार्क्सडेल के पीए ने बाद में दिन में नेटस्केप को अपना नेविगेटर स्रोत कोड जारी किया अनुकूल परिणाम के साथ खुला स्रोत।
परिभाषाएं
ओपन सोर्स इनिशिएटिव्स परिभाषा अंतरराष्ट्रीय स्तर पर मानक या वास्तविक परिभाषा के रूप में मान्यता प्राप्त है। इसके अलावा, डेबियन, ड्रूपल एसोसिएशन, फ्रीबीएसडी फाउंडेशन, लिनक्स फाउंडेशन, मोज़िला फाउंडेशन, विकिमीडिया फाउंडेशन, वर्डप्रेस फाउंडेशन समेत दुनिया की सबसे बड़ी ओपन सोर्स सॉफ्टवेयर परियोजनाओं और योगदानकर्ताओं में से कई ने ओएसआई के मिशन और ओपन सोर्स डेफिनिशन को बनाए रखने के लिए प्रतिबद्ध किया है। ओएसआई संबद्ध समझौते।
ओएसआई यह निर्धारित करने के लिए ओपन सोर्स डेफिनिशन का उपयोग करता है कि क्या यह सॉफ़्टवेयर लाइसेंस ओपन सोर्स को मानता है या नहीं। परिभाषा डेबियन फ्री सॉफ्टवेयर दिशानिर्देशों पर आधारित थी, मुख्य रूप से पेरेन्स द्वारा लिखित और अनुकूलित की गई थी। पेरेन्स ने फ्री सॉफ्टवेयर फाउंडेशन से "चार स्वतंत्रता" पर अपने लेखन का आधार नहीं बनाया, जो बाद में व्यापक रूप से उपलब्ध थे।
पेरेन्स की परिभाषा के तहत, ओपन सोर्स एक व्यापक सामान्य प्रकार के सॉफ़्टवेयर लाइसेंस का वर्णन करता है जो कोड के उपयोग और संशोधन पर आराम से या अस्तित्वहीन प्रतिबंधों के साथ आम जनता को स्रोत कोड उपलब्ध कराता है। यह ओपन सोर्स का एक स्पष्ट "फीचर" है जो सॉफ़्टवेयर के तेज़ी से विकास को सक्षम करने के लिए किसी भी संगठन या उपयोगकर्ता द्वारा उपयोग या वितरण पर बहुत कम प्रतिबंध लगाता है।
प्रारंभ में इसे स्वीकार करने के बावजूद, एफएसएफ के रिचर्ड स्टॉलमैन अब "ओपन सोर्स" शब्द का व्यापक रूप से विरोध करते हैं जिसे वे "मुफ्त सॉफ्टवेयर" के रूप में संदर्भित करते हैं। हालांकि वह इस बात से सहमत हैं कि दोनों शब्द "लगभग उसी श्रेणी के सॉफ्टवेयर" का वर्णन करते हैं, स्टालमैन गलत और भ्रामक शब्दों को समझाते हैं। स्टालमैन ओपन सोर्स इनिशिएटिव के प्रोफेसर व्यावहारिकता का भी विरोध करते हैं, क्योंकि उन्हें डर है कि स्वतंत्रता और समुदाय के मुफ्त सॉफ्टवेयर आदर्शों को सॉफ्टवेयर स्वतंत्रता के लिए एफएसएफ के आदर्शवादी मानकों पर समझौता करके धमकी दी गई है। एफएसएफ मुक्त सॉफ्टवेयर को ओपन सोर्स सॉफ़्टवेयर का सबसेट मानता है, और रिचर्ड स्टॉलमैन ने समझाया कि उदाहरण के लिए, डीआरएम सॉफ़्टवेयर को ओपन सोर्स के रूप में विकसित किया जा सकता है, इसके बावजूद यह अपने उपयोगकर्ताओं को स्वतंत्रता नहीं देता है, और इस प्रकार ऐसा नहीं करता है मुक्त सॉफ्टवेयर के रूप में योग्य नहीं है।
ओपन-सोर्स सॉफ्टवेयर लाइसेंसिंग
जब कोई लेखक ओपन-सोर्स प्रोजेक्ट में कोड का योगदान करता है तो वे एक स्पष्ट लाइसेंस या एक निहित लाइसेंस पहले से ही लाइसेंस कोड)। कुछ ओपन-सोर्स प्रोजेक्ट लाइसेंस के तहत योगदान कोड नहीं लेते हैं, लेकिन वास्तव में परियोजना में कोड योगदान स्वीकार करने के लिए लेखक के कॉपीराइट के संयुक्त असाइनमेंट की आवश्यकता होती है।
मुफ्त सॉफ्टवेयर लाइसेंस / ओपन-सोर्स लाइसेंस के उदाहरणों में अपाचे लाइसेंस, बीएसडी लाइसेंस, जीएनयू जनरल पब्लिक लाइसेंस, जीएनयू लेसर जनरल पब्लिक लाइसेंस, एमआईटी लाइसेंस, ग्रहण सार्वजनिक लाइसेंस और मोज़िला पब्लिक लाइसेंस शामिल हैं।
ओपन-सोर्स लाइसेंस का प्रसार ओपन-सोर्स आंदोलन का नकारात्मक पहलू है क्योंकि लाइसेंस के बीच मतभेदों के कानूनी प्रभावों को समझना अक्सर मुश्किल होता है। 180,000 से अधिक खुली स्रोत परियोजनाओं और 1400 से अधिक अद्वितीय लाइसेंसों के साथ, "बंद स्रोत" वाणिज्यिक उद्यमों के भीतर ओपन-सोर्स उपयोग को प्रबंधित करने का निर्णय लेने की जटिलता नाटकीय रूप से बढ़ी है। कुछ घर उगाए जाते हैं, जबकि अन्य मुख्यधारा के एफओएसएस लाइसेंस जैसे बर्कले सॉफ्टवेयर डिस्ट्रीब्यूशन, अपाचे, एमआईटी-स्टाइल, या जीएनयू जनरल पब्लिक लाइसेंस के बाद मॉडलिंग किए जाते हैं। इसके संदर्भ में, ओपन-सोर्स प्रैक्टिशनर वर्गीकरण योजनाओं का उपयोग शुरू कर रहे हैं जिसमें एफओएसएस लाइसेंस समूहबद्ध होते हैं ।
ओपन सोर्स / फ्री सॉफ़्टवेयर आंदोलन के लिए एक महत्वपूर्ण कानूनी मील का पत्थर 2008 में पारित किया गया था, जब अमेरिकी संघीय अपील अदालत ने फैसला सुनाया था कि मुफ्त सॉफ्टवेयर लाइसेंस निश्चित रूप से कॉपीराइट किए गए काम के उपयोग पर कानूनी रूप से बाध्यकारी स्थितियां निर्धारित करते हैं, और इसलिए वे मौजूदा कॉपीराइट कानून के तहत लागू होते हैं । नतीजतन, यदि अंतिम उपयोगकर्ता लाइसेंसिंग शर्तों का उल्लंघन करते हैं, तो उनका लाइसेंस गायब हो जाता है, जिसका अर्थ है कि वे कॉपीराइट का उल्लंघन कर रहे हैं। इस लाइसेंसिंग जोखिम के बावजूद, अधिकांश वाणिज्यिक सॉफ्टवेयर विक्रेता लाइसेंस शर्तों को पूरा करते समय वाणिज्यिक उत्पादों में ओपन सोर्स सॉफ्टवेयर का उपयोग कर रहे हैं, उदा। अपाचे लाइसेंस का लाभ उठाना।
प्रमाणपत्र
प्रमाणन उपयोगकर्ता विश्वास बनाने में मदद कर सकता है। प्रमाणन को एक संपूर्ण सॉफ्टवेयर सिस्टम के लिए सबसे सरल घटक पर लागू किया जा सकता है। संयुक्त राष्ट्र विश्वविद्यालय इंटरनेशनल इंस्टीट्यूट फॉर सॉफ्टवेयर टेक्नोलॉजी, ने एक परियोजना शुरू की जिसे "द ग्लोबल डेस्कटॉप प्रोजेक्ट" कहा जाता है। इस परियोजना का लक्ष्य डेस्कटॉप इंटरफ़ेस बनाना है कि प्रत्येक अंतिम उपयोगकर्ता समझने और बातचीत करने में सक्षम है, इस प्रकार भाषा और सांस्कृतिक बाधाओं को पार कर रहा है। परियोजना विकास प्रणाली के विकासशील देशों की पहुंच में सुधार करेगी। यूएनयू / आईआईएसटी प्रमाणन शुरू करके सॉफ्टवेयर की गुणवत्ता में किसी भी समझौता किए बिना इसे हासिल करने की उम्मीद करता है।
ओपन-सोर्स सॉफ्टवेयर विकास
विकास मॉडल
1997 के निबंध द कैथेड्रल एंड द बाज़ार में, ओपन-सोर्स इंजीलिस्ट एरिक एस रेमंड ने बाजार मॉडल के नाम से जाना जाने वाला ओएसएस विकसित करने के लिए एक मॉडल का सुझाव दिया। रेमंड कैथेड्रल बनाने के लिए पारंपरिक पद्धतियों द्वारा सॉफ़्टवेयर के विकास की तुलना करता है, "सावधानी से अलग-अलग जादूगरों या शानदार अलगाव में काम करने वाले mages के छोटे बैंड द्वारा तैयार की जाती है।" उन्होंने सुझाव दिया कि सभी सॉफ्टवेयर बाजार शैली का उपयोग करके विकसित किए जाने चाहिए, जिसे उन्होंने "अलग-अलग एजेंडा और दृष्टिकोणों का एक बड़ा झुकाव बाजार" बताया। 
विकास के पारंपरिक मॉडल में, जिसे उन्होंने कैथेड्रल मॉडल कहा, विकास एक केंद्रीकृत तरीके से होता है। भूमिकाओं को स्पष्ट रूप से परिभाषित किया गया है। भूमिकाओं में डिजाइन करने के लिए समर्पित लोगों, परियोजना के प्रबंधन के लिए जिम्मेदार लोग, और कार्यान्वयन के लिए जिम्मेदार लोग शामिल हैं। पारंपरिक सॉफ्टवेयर इंजीनियरिंग कैथेड्रल मॉडल का पालन करता है।
बाजार मॉडल हालांकि, अलग है। इस मॉडल में, भूमिकाओं को स्पष्ट रूप से परिभाषित नहीं किया जाता है। ग्रेगोरियो रोबल्स सुझाव देते हैं कि बाजार मॉडल का उपयोग करके विकसित सॉफ्टवेयर को निम्नलिखित पैटर्न प्रदर्शित करना चाहिए:
उपयोगकर्ताओं को सह-डेवलपर्स के रूप में माना जाना चाहिए
उपयोगकर्ताओं को सह-डेवलपर्स की तरह माना जाता है और इसलिए उन्हें सॉफ़्टवेयर के स्रोत कोड तक पहुंच प्राप्त होनी चाहिए। इसके अलावा, उपयोगकर्ताओं को सॉफ्टवेयर, कोड के लिए कोड फिक्स, बग रिपोर्ट, प्रलेखन इत्यादि में अतिरिक्त जमा करने के लिए प्रोत्साहित किया जाता है। अधिक सह-डेवलपर उस दर को बढ़ाते हैं जिस पर सॉफ्टवेयर विकसित होता है। लिनस के कानून बताते हैं, "पर्याप्त आंखों को देखते हुए सभी बग उथले होते हैं।" इसका अर्थ यह है कि यदि कई उपयोगकर्ता स्रोत कोड देखते हैं, तो अंत में वे सभी बग पाएंगे और सुझाव देंगे कि उन्हें कैसे ठीक किया जाए। ध्यान दें कि कुछ उपयोगकर्ताओं के पास उन्नत प्रोग्रामिंग कौशल हैं, और इसके अलावा, प्रत्येक उपयोगकर्ता की मशीन एक अतिरिक्त परीक्षण वातावरण प्रदान करती है। यह नया परीक्षण वातावरण उस नई बग को खोजने और ठीक करने की क्षमता प्रदान करता है।
प्रारंभिक रिलीज
सॉफ़्टवेयर का पहला संस्करण जल्द से जल्द जारी किया जाना चाहिए ताकि सह-डेवलपर्स को जल्दी खोजने की संभावना बढ़ सके।
लगातार एकीकरण
कोड परिवर्तनों को एकीकृत किया जाना चाहिए जितनी बार संभव हो सके ताकि परियोजना जीवन चक्र के अंत में बड़ी संख्या में बग फिक्स करने के ऊपरी हिस्से से बचें। कुछ ओपन सोर्स प्रोजेक्ट्स ने रात का निर्माण किया है जहां दैनिक आधार पर एकीकरण स्वचालित रूप से किया जाता है।
कई संस्करण
सॉफ्टवेयर के कम से कम दो संस्करण होना चाहिए। अधिक सुविधाओं के साथ एक बग्गीर संस्करण होना चाहिए और कम सुविधाओं वाले एक अधिक स्थिर संस्करण होना चाहिए। बग्गी संस्करण उन उपयोगकर्ताओं के लिए है जो नवीनतम सुविधाओं का तत्काल उपयोग करना चाहते हैं, और कोड का उपयोग करने के जोखिम को स्वीकार करने के इच्छुक हैं जो अभी तक पूरी तरह से परीक्षण नहीं किया गया है। उपयोगकर्ता सह-डेवलपर्स के रूप में कार्य कर सकते हैं, बग की रिपोर्ट कर सकते हैं और बग फिक्स प्रदान कर सकते हैं।
उच्च मॉड्यूलरेशन
सॉफ्टवेयर की सामान्य संरचना मॉड्यूलर होनी चाहिए जो स्वतंत्र घटकों पर समानांतर विकास के लिए अनुमति दे।
गतिशील निर्णय लेने की संरचना
निर्णय लेने की संरचना की आवश्यकता है, चाहे वह औपचारिक या अनौपचारिक हो, जो उपयोगकर्ता आवश्यकताओं और अन्य कारकों को बदलने के आधार पर रणनीतिक निर्णय लेता है। चरम प्रोग्रामिंग के साथ तुलना करें।
हालांकि, आंकड़े बताते हैं कि बाजार मॉडल के मुताबिक ओएसएस लोकतांत्रिक नहीं है। 31,999 डेवलपर्स द्वारा पांच अरब बाइट मुक्त / मुक्त स्रोत कोड का विश्लेषण दर्शाता है कि 74% कोड सबसे सक्रिय 10% लेखकों द्वारा लिखा गया था। प्रोजेक्ट में शामिल लेखकों की औसत संख्या 5.1 थी, औसत पर 2. 
फायदे और नुकसान
ओपन सोर्स सॉफ़्टवेयर आमतौर पर मालिकाना सॉफ़्टवेयर की तुलना में प्राप्त करना आसान होता है, जिसके परिणामस्वरूप अक्सर उपयोग में वृद्धि होती है। इसके अतिरिक्त, मानक के खुले स्रोत कार्यान्वयन की उपलब्धता उस मानक को अपनाने में वृद्धि कर सकती है। इसने डेवलपर वफादारी बनाने में भी मदद की है क्योंकि डेवलपर्स को अधिकार महसूस होता है और अंत उत्पाद के स्वामित्व की भावना है।
इसके अलावा, ओएसएस के लिए विपणन और लॉजिस्टिक सेवाओं की कम लागत की आवश्यकता है। ओएसएस भी कंपनियों को प्रौद्योगिकी के विकास के बराबर रखने में मदद करता है। कंपनी के इमेज को बढ़ावा देने के लिए यह एक अच्छा टूल है, जिसमें इसके वाणिज्यिक उत्पाद भी शामिल हैं। ओएसएस विकास दृष्टिकोण ने विश्वसनीय, उच्च गुणवत्ता वाले सॉफ्टवेयर को जल्दी और निष्पक्ष रूप से उत्पादित करने में मदद की है। 
ओपन सोर्स डेवलपमेंट एक और अधिक लचीली तकनीक और त्वरित नवाचार की संभावना प्रदान करता है। इसे अधिक विश्वसनीय माना जाता है क्योंकि इसमें आमतौर पर हजारों स्वतंत्र प्रोग्रामर सॉफ़्टवेयर की बग का परीक्षण और फिक्सिंग करते हैं। ओपन सोर्स उस कंपनी या लेखक पर निर्भर नहीं है जिसने मूल रूप से इसे बनाया है। यहां तक ​​कि अगर कंपनी विफल हो जाती है, तो कोड मौजूद है और इसके उपयोगकर्ताओं द्वारा विकसित किया जा सकता है। इसके अलावा, यह सभी के लिए सुलभ खुले मानकों का उपयोग करता है; इस प्रकार, इसमें असंगत प्रारूपों की समस्या नहीं है जो मालिकाना सॉफ्टवेयर में मौजूद हैं।
यह लचीला है क्योंकि मॉड्यूलर सिस्टम प्रोग्रामर को कस्टम इंटरफेस बनाने की अनुमति देते हैं, या इसमें नई क्षमताओं को जोड़ते हैं और यह अभिनव है क्योंकि ओपन सोर्स प्रोग्राम बड़ी संख्या में विभिन्न प्रोग्रामर के बीच सहयोग का उत्पाद हैं। अलग दृष्टिकोण, कॉर्पोरेट उद्देश्यों, और व्यक्तिगत लक्ष्यों का मिश्रण नवाचार को गति देता है।
इसके अलावा, मुफ्त सॉफ्टवेयर पूरी तरह से तकनीकी आवश्यकताओं के अनुसार विकसित किया जा सकता है। इसे वाणिज्यिक दबाव के बारे में सोचने की आवश्यकता नहीं है जो अक्सर सॉफ्टवेयर की गुणवत्ता को कम कर देता है। वाणिज्यिक दबाव पारंपरिक सुरक्षा डेवलपर्स को सुरक्षा आवश्यकताओं की तुलना में ग्राहकों की आवश्यकताओं पर अधिक ध्यान देते हैं, क्योंकि ऐसी विशेषताएं ग्राहक के लिए कुछ हद तक अदृश्य हैं।
कभी-कभी यह कहा जाता है कि ओपन सोर्स डेवलपमेंट प्रक्रिया अच्छी तरह से परिभाषित नहीं की जा सकती है और विकास प्रक्रिया में चरणों जैसे सिस्टम परीक्षण और दस्तावेज़ीकरण को अनदेखा किया जा सकता है। हालांकि यह केवल छोटे परियोजनाओं के लिए सच है। बड़ी, सफल परियोजनाएं कम से कम कुछ नियमों को परिभाषित और लागू करती हैं क्योंकि उन्हें टीमवर्क को संभव बनाने के लिए उनकी आवश्यकता होती है। सबसे जटिल परियोजनाओं में ये नियम दो स्वतंत्र डेवलपर्स द्वारा मामूली परिवर्तन की समीक्षा के रूप में सख्त हो सकते हैं।
सभी ओएसएस पहल सफल नहीं हुए हैं, उदाहरण के लिए स्रोत एक्सचेंज और ईज़ेल। सॉफ्टवेयर विशेषज्ञों और शोधकर्ता जो खुले स्रोत की गुणवत्ता प्रणालियों का उत्पादन करने की क्षमता से आश्वस्त नहीं हैं, अस्पष्ट प्रक्रिया, देर से दोष की खोज और किसी भी अनुभवजन्य साक्ष्य की कमी को सबसे महत्वपूर्ण समस्याओं के रूप में पहचानते हैं। ओपन सोर्स प्रतिमान के आसपास वाणिज्यिक रूप से ध्वनि व्यवसाय मॉडल को डिजाइन करना भी मुश्किल है। नतीजतन, केवल तकनीकी आवश्यकताओं को संतुष्ट किया जा सकता है न कि बाजार के लोगों। सुरक्षा के मामले में, ओपन सोर्स हैकर को सॉफ़्टवेयर की कमजोरियों या कमियों के बारे में जानना बंद कर सकता है, जो बंद स्रोत स्रोत से अधिक आसानी से है। यह वर्चुअल संगठनों में भाग लेने वाले स्वायत्त एजेंटों के प्रभावी प्रदर्शन को बनाने के लिए नियंत्रण तंत्र पर निर्भर करता है।
विकास के औजार
ओएसएस विकास में, उपकरण का उपयोग उत्पाद के विकास और विकास प्रक्रिया के समर्थन के लिए किया जाता है।
कंसूरेंट वर्जन सिस्टम और बाद में सबवर्जन और गिट जैसे संशोधन नियंत्रण प्रणाली उपकरण के उदाहरण हैं, अक्सर स्वयं खुले स्रोत, स्रोत कोड फ़ाइलों का प्रबंधन करने और सॉफ़्टवेयर प्रोजेक्ट के लिए उन फ़ाइलों में परिवर्तनों की सहायता करते हैं। परियोजनाओं को अक्सर लॉन्चपैड, बिटबकेट और गिटहब जैसी साइटों पर होस्ट और प्रकाशित किया जाता है।
ओपन सोर्स प्रोजेक्ट्स को अक्सर "थोड़ा औपचारिक प्रक्रिया मॉडलिंग या समर्थन" के साथ व्यवस्थित रूप से व्यवस्थित किया जाता है, लेकिन ओपन सोर्स सॉफ्टवेयर विकास को व्यवस्थित करने के लिए अक्सर जारीकर्ताओं जैसे उपयोगिताएं उपयोग की जाती हैं। आम तौर पर इस्तेमाल किए गए बगट्रैकर्स में बगजिला और रेडमाइन शामिल हैं।
मेलिंग सूचियों और आईआरसी जैसे उपकरण डेवलपर्स के बीच समन्वय का साधन प्रदान करते हैं। केंद्रीकृत कोड होस्टिंग साइटों में सामाजिक सुविधाएं भी होती हैं जो डेवलपर्स को संवाद करने की अनुमति देती हैं।
संगठन
ओएसएस विकास में शामिल कुछ "अधिक प्रमुख संगठनों" में अपाचे सॉफ्टवेयर फाउंडेशन, अपाचे वेब सर्वर के निर्माता शामिल हैं; लिनक्स फाउंडेशन, एक गैर-लाभकारी जो 2012 तक लिनस टोरवाल्ड्स, लिनक्स ऑपरेटिंग सिस्टम कर्नेल के निर्माता को नियोजित करता था; एक्लिप्स फाउंडेशन, ग्रहण सॉफ्टवेयर विकास मंच का घर; डेबियन प्रोजेक्ट, प्रभावशाली डेबियन जीएनयू / लिनक्स वितरण के निर्माता; फ़ायरफ़ॉक्स वेब ब्राउज़र का घर मोज़िला फाउंडेशन; और ओडब्ल्यू 2, यूरोपीय पैदा हुए समुदाय ओपन सोर्स मिडलवेयर विकसित कर रहा है। नए संगठनों के पास एक अधिक परिष्कृत शासन मॉडल होता है और उनकी सदस्यता अक्सर कानूनी इकाई सदस्यों द्वारा बनाई जाती है।
ओपन सोर्स सॉफ्टवेयर इंस्टीट्यूट 2001 में स्थापित एक सदस्यता-आधारित, गैर-लाभकारी ) संगठन है जो अमेरिकी संघीय, राज्य और स्थानीय सरकारी एजेंसियों के भीतर ओपन सोर्स सॉफ्टवेयर समाधान के विकास और कार्यान्वयन को बढ़ावा देता है। ओएसएसआई के प्रयासों ने संघीय सरकार और रक्षा और गृहभूमि सुरक्षा समुदायों के भीतर ओपन सोर्स सॉफ्टवेयर कार्यक्रमों और नीतियों को अपनाने को बढ़ावा देने पर ध्यान केंद्रित किया है।
अमेरिका के लिए ओपन सोर्स एक समूह है जो संयुक्त राज्य संघीय सरकार में ओपन सोर्स सॉफ्टवेयर के लाभों के बारे में जागरूकता बढ़ाने के लिए बनाया गया है। उनके लक्षित लक्ष्य सरकारी पारदर्शिता को बढ़ाने के लिए ओपन सोर्स सॉफ्टवेयर के उपयोग, ओपन सोर्स सॉफ्टवेयर परियोजनाओं में भागीदारी, और ओपन सोर्स समुदाय गतिशीलता को शामिल करने के लिए सरकार को प्रोत्साहित करना है।
मिल-ओएसएस एक समूह है जो सेना में ओएसएस उपयोग और निर्माण की प्रगति के लिए समर्पित है।
अनुदान
ओपन-सोर्स सॉफ़्टवेयर का व्यापक रूप से स्वतंत्र अनुप्रयोगों और गैर-ओपन-सोर्स अनुप्रयोगों में घटकों के रूप में उपयोग किया जाता है। कई स्वतंत्र सॉफ्टवेयर विक्रेताओं, मूल्यवर्धित पुनर्विक्रेताओं, और हार्डवेयर विक्रेताओं अपने मालिकाना, लाभकारी उत्पादों और सेवाओं के अंदर ओपन-सोर्स फ्रेमवर्क, मॉड्यूल और पुस्तकालयों का उपयोग करते हैं। ग्राहक के परिप्रेक्ष्य से, मानक वाणिज्यिक शर्तों और समर्थन के तहत खुली तकनीक का उपयोग करने की क्षमता मूल्यवान है। वे कानूनी सुरक्षा, "वाणिज्यिक ग्रेड क्यूए", और पेशेवर समर्थन / प्रशिक्षण / परामर्श जो वाणिज्यिक सॉफ्टवेयर के विशिष्ट हैं, के लिए भुगतान करने को तैयार हैं, जबकि जुर्माना के लाभ भी प्राप्त करते हैं लॉक-इन का नियंत्रण और कमी जो ओपन-सोर्स के साथ आता है।
अन्य सॉफ्टवेयर लाइसेंसिंग / विकास मॉडल के साथ तुलना
बंद स्रोत / मालिकाना सॉफ्टवेयर
ओपन सोर्स बनाम बंद स्रोत पर बहस कभी-कभी गरम होती है।
शीर्ष चार कारण व्यक्तियों या संगठनों ने ओपन सोर्स सॉफ्टवेयर का चयन किया है:
चूंकि अभिनव कंपनियां अब सॉफ्टवेयर बिक्री पर भारी निर्भर नहीं हैं, इसलिए स्वामित्व सॉफ्टवेयर एक आवश्यकता से कम हो गया है। इस प्रकार, ओपन सोर्स कंटेंट मैनेजमेंट सिस्टम जैसी चीजें या सीएमएस-तैनाती अधिक आम हो रही हैं। 2009 में, यूएस व्हाइट हाउस ने अपनी सीएमएस प्रणाली को स्वामित्व प्रणाली से ड्रूपल ओपन सोर्स सीएमएस में बदल दिया। इसके अलावा, नोवेल जैसी कंपनियां ओपन सोर्स कोड पर स्विच करने के लाभों को लगातार बहस करती हैं, जो पहले से ही सोर्स कोड खोलने के लिए उत्पाद की पेशकश का हिस्सा बदलती हैं। इस तरह, ओपन सोर्स सॉफ्टवेयर अद्वितीय या विशिष्ट समस्याओं के समाधान प्रदान करता है। इस प्रकार, यह रिपोर्ट किया गया है कि 98% एंटरप्राइज़-स्तरीय कंपनियां कुछ क्षमता में ओपन सोर्स सॉफ्टवेयर प्रसाद का उपयोग करती हैं।
इस बाजार में बदलाव के साथ, अधिक महत्वपूर्ण सिस्टम ओपन सोर्स प्रसाद पर भरोसा करना शुरू कर रहे हैं, "सुरक्षा बग की तलाश में" सहायता के लिए अधिक धन की अनुमति देता है। ओएसएस को गोद लेने संगठनों के पायलट अध्ययन के मुताबिक, प्रबंधक के विश्वासों में सांख्यिकीय महत्व के निम्नलिखित कारकों को देखा गया: परिणामों की ओर रुख, दूसरों के प्रभाव और व्यवहार, और उनके कार्य करने की क्षमता।
मालिकाना स्रोत वितरकों ने बाजार हिस्सेदारी शिफ्ट के कारण ओपन सोर्स समुदाय को विकसित करना और योगदान देना शुरू कर दिया है, ताकि प्रतिस्पर्धी बने रहने के लिए अपने मॉडलों को फिर से शुरू करने की आवश्यकता हो।
कई समर्थकों का तर्क है कि ओपन सोर्स सॉफ्टवेयर स्वाभाविक रूप से सुरक्षित है क्योंकि कोई भी व्यक्ति कोड देख, संपादित और बदल सकता है। लिनक्स स्रोत कोड के एक अध्ययन में प्रति 1000 लाइनों के 0.17 बग हैं जबकि मालिकाना सॉफ्टवेयर आमतौर पर प्रति 1000 लाइनों में 20-30 बग स्कोर करता है।
मुफ्त सॉफ्टवेयर
फ्री सॉफ्टवेयर आंदोलन के नेता रिचर्ड स्टॉलमैन के मुताबिक, मुख्य अंतर यह है कि दूसरे पर एक शब्द चुनकर कोई दूसरों को यह जानने देता है कि किसी के लक्ष्य क्या हैं: "ओपन सोर्स है एक विकास पद्धति; मुफ्त सॉफ्टवेयर एक सामाजिक आंदोलन है।" फिर भी, ओपन सोर्स सॉफ्टवेयर और मुफ्त सॉफ्टवेयर के बीच महत्वपूर्ण ओवरलैप है।
एफएसएफ ने कहा कि "ओपन सोर्स" शब्द एक अलग तरह की अस्पष्टता को बढ़ावा देता है जैसे कि यह स्रोत की उपलब्धता को केवल उपयोग, संशोधित करने और पुनर्वितरण की स्वतंत्रता के साथ भ्रमित करता है। दूसरी तरफ, "मुफ़्त सॉफ़्टवेयर" शब्द की आलोचना "मुक्त" शब्द की अस्पष्टता के लिए "बिना किसी कीमत पर" की गई थी, जिसे व्यावसायिक गोद लेने के लिए निराशाजनक माना गया था, और ऐतिहासिक अस्पष्ट उपयोग के लिए अवधि।
डेवलपर्स ने ओपन सोर्स सॉफ्टवेयर का वर्णन करने के लिए वैकल्पिक सॉफ्टवेयर फ्री और ओपन सोर्स सॉफ्टवेयर, या फ्री / लिबर एंड ओपन सोर्स सॉफ्टवेयर का उपयोग किया है, जो कि मुफ्त सॉफ्टवेयर भी है। जबकि ओपन सोर्स सॉफ्टवेयर की परिभाषा एफएसएफ की मुफ्त सॉफ्टवेयर परिभाषा के समान ही है यह डेबियन फ्री सॉफ्टवेयर दिशानिर्देशों पर आधारित थी, मुख्य रूप से ब्रूस पेरेन द्वारा एरिक एस रेमंड और अन्य लोगों के इनपुट के साथ लिखित और अनुकूलित।
"ओपन सोर्स" शब्द मूल रूप से ट्रेडमार्क होने का इरादा था; हालांकि, शब्द को बहुत वर्णनात्मक माना गया था, इसलिए कोई ट्रेडमार्क मौजूद नहीं है। ओएसआई पसंद करेगा कि लोग ओपन सोर्स का इलाज करते हैं जैसे कि यह एक ट्रेडमार्क था, और इसे केवल ओएसआई अनुमोदित लाइसेंस के तहत लाइसेंस प्राप्त सॉफ्टवेयर का वर्णन करने के लिए उपयोग करें।
ओएसआई प्रमाणित एक ट्रेडमार्क है जो केवल उन लोगों को लाइसेंस प्राप्त करता है जो ओपन सोर्स इनिशिएटिव की सूची में सूचीबद्ध लाइसेंस के तहत लाइसेंस प्राप्त सॉफ्टवेयर वितरित कर रहे हैं।
स्रोत-उपलब्ध बनाम ओपन-सोर्स
हालांकि "ओपन सोर्स सॉफ़्टवेयर" की ओएसआई परिभाषा व्यापक रूप से स्वीकार की जाती है, लेकिन कुछ लोगों और संगठनों ने इस शब्द का उपयोग ऐसे सॉफ़्टवेयर को संदर्भित करने के लिए किया है जहां स्रोत देखने के लिए उपलब्ध है, लेकिन जो कानूनी रूप से संशोधित या पुनर्वितरित नहीं किया जा सकता है। इस तरह के सॉफ़्टवेयर को अक्सर स्रोत-उपलब्ध, या साझा स्रोत के रूप में जाना जाता है, 2001 में माइक्रोसॉफ्ट द्वारा बनाई गई एक शब्द। 2007 में दो साझा स्रोत लाइसेंस ओएसआई द्वारा प्रमाणित किए गए थे, अधिकांश साझा स्रोत लाइसेंस अभी भी केवल स्रोत-उपलब्ध हैं।
2007 में, ओएसआई के अध्यक्ष माइकल टिमैन ने कंपनियों को "ओपन सोर्स" के रूप में अपने सॉफ्टवेयर को बढ़ावा देने के लिए शुगरसीएमएम की आलोचना की थी, जबकि वास्तव में इसमें ओएसआई-अनुमोदित लाइसेंस नहीं था। शुगरसीआरएम के मामले में, ऐसा इसलिए था क्योंकि सॉफ़्टवेयर तथाकथित "बैडवेयर" है क्योंकि यह एक "बैज" निर्दिष्ट करता है जिसे उपयोगकर्ता इंटरफ़ेस में प्रदर्शित किया जाना चाहिए । एक और उदाहरण संस्करण 5 से पहले साइलाब था, जिसे खुद को "संख्यात्मक गणना के लिए ओपन सोर्स प्लेटफार्म" कहा जाता था लेकिन लाइसेंस था जो संशोधित संस्करणों के वाणिज्यिक पुनर्वितरण को मना कर देता था।
ओपन सोर्सिंग
ओपन-सोर्सिंग ओपन सोर्स मूवमेंट का प्रचार करने का कार्य है, जो अक्सर ओपन सोर्स / फ्री सॉफ्टवेयर लाइसेंस के तहत पहले मालिकाना सॉफ्टवेयर जारी करने का जिक्र करता है, लेकिन यह ओपन सोर्स सॉफ्टवेयर प्रोग्रामिंग या ओपन सोर्स सॉफ्टवेयर स्थापित करने का भी उल्लेख कर सकता है।
उल्लेखनीय सॉफ्टवेयर पैकेज, पहले मालिकाना, जो खुले खुले हुए हैं में शामिल हैं:
सॉफ्टवेयर के लाइसेंस को बदलने से पहले, वितरक आमतौर पर तीसरे पक्ष के लाइसेंस प्राप्त कोड के लिए स्रोत कोड का ऑडिट करते हैं जिन्हें उन्हें अपने अवशेष के लिए अनुमति को हटाना या प्राप्त करना होगा। बैकडोर्ड्स और अन्य मैलवेयर को भी हटाया जाना चाहिए क्योंकि कोड की रिहाई के बाद उन्हें आसानी से खोजा जा सकता है।
वर्तमान अनुप्रयोग और गोद लेने
व्यापक रूप से खुले स्रोत सॉफ्टवेयर का उपयोग किया जाता है
ओपन सोर्स सॉफ्टवेयर प्रोजेक्ट्स स्वयंसेवक प्रोग्रामर के नेटवर्क द्वारा बनाए और बनाए रखे जाते हैं और व्यापक रूप से वाणिज्यिक और वाणिज्यिक उत्पादों में व्यापक रूप से उपयोग किए जाते हैं। ओपन-सोर्स उत्पादों के प्राइम उदाहरण अपाचे HTTP सर्वर, ई-कॉमर्स प्लेटफ़ॉर्म ओएसकामर्स, इंटरनेट ब्राउज़र मोज़िला फ़ायरफ़ॉक्स और क्रोमियम और पूर्ण कार्यालय सुइट लिबर ऑफिस है। सबसे सफल ओपन-सोर्स उत्पादों में से एक जीएनयू / लिनक्स ऑपरेटिंग सिस्टम है, एक ओपन-सोर्स यूनिक्स-जैसे ऑपरेटिंग सिस्टम, और इसका व्युत्पन्न एंड्रॉइड, मोबाइल उपकरणों के लिए एक ऑपरेटिंग सिस्टम है। कुछ उद्योगों में, ओपन सोर्स सॉफ्टवेयर आदर्श है।
गैर-सॉफ्टवेयर उपयोग के लिए एक्सटेंशन
जबकि "ओपन सोर्स" शब्द मूल रूप से केवल स्रोत कोड के स्रोत पर लागू होता है, अब यह कई अन्य क्षेत्रों जैसे ओपन सोर्स पारिस्थितिकी, पर लागू किया जा रहा है ताकि प्रौद्योगिकियों को विकेंद्रीकृत करने के लिए एक आंदोलन हो ताकि कोई भी मानव उनका उपयोग कर सकते हैं। हालांकि, यह अक्सर उन क्षेत्रों में गलत तरीके से गलत होता है जिनके पास अलग-अलग और प्रतिस्पर्धी सिद्धांत होते हैं, जो केवल आंशिक रूप से ओवरलैप होते हैं।
ओपन सोर्स सॉफ़्टवेयर को रेखांकित करने वाले वही सिद्धांत कई अन्य उद्यमों जैसे ओपन-सोर्स हार्डवेयर, विकिपीडिया और ओपन-एक्सेस प्रकाशन में पाए जा सकते हैं। सामूहिक रूप से, इन सिद्धांतों को ओपन सोर्स, ओपन कंटेंट, और ओपन सहयोग के रूप में जाना जाता है: "नवाचार या उत्पादन की कोई भी प्रणाली जो लक्ष्य उन्मुख पर अभी तक कमजोर समेकित प्रतिभागियों पर निर्भर करती है, जो आर्थिक रूप से उत्पाद बनाने के लिए बातचीत करते हैं मूल्य, जो वे योगदानकर्ताओं और गैर-योगदानकर्ताओं के लिए समान रूप से उपलब्ध कराते हैं।"
यह "संस्कृति" या विचारधारा इस विचार को लेती है कि सिद्धांत सामान्य रूप से वाणिज्यिक कंपनियों में उपयोग किए जाने वाले विकास के अधिक केंद्रीकृत मॉडल के विपरीत विभिन्न एजेंडा, दृष्टिकोण और प्राथमिकताओं के समवर्ती इनपुट की सुविधा के लिए आम तौर पर लागू होते हैं।
